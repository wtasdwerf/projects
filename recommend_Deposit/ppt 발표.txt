* 수정사항
: detailview 블록 색 씌우기
: detailview 버튼명 바꾸기 (가입하기 -> 관심 상품 / 가입해제 -> 관심 상품 해제)

먼저 해당 웹 사이트에 최초 이동 시 메인, 로그인, 회원가입 탭이 위치한 네비게이션 바가 나타나며, 화면의 심심함을 달래주기 위해 thecatapi를 활용하여 랜덤으로 고양이 사진을 메인 화면에 배치하였습니다.

-------------------------------------------------------------------------------------
1. 회원가입

해당 네비게이션 탭의 회원가입 탭에서 먼저 회원가입을 수행해보겠습니다.  

해당 회원가입 탭에서 잘못된 정보를 입력 시 회원가입 실패 알림이 발생하며, 회원가입 성공시 메인화면으로 이동합니다.

(동작 시연)

해당 동작이 어떻게 이루어지는지 설명드리자면, vue의 회원가입 뷰에서 고객이 입력한 정보들을 회원가입 함수인 signUp()함수를 거쳐 django auth user의 회원가입 탭에 데이터 작성을 요청합니다.

 그 후 작성된 데이터가 양식에 맞지 않을 시 메시지가 있는 자은 모달 창을 window.alert()를 통해 error가 발생했음을 고객에게 표시하게 됩니다.

 양식에 맞게 작성될 시 고객 정보를 django rest auth 주소로 전달합니다.
그리고 login 함수로 유저의 이름과 비밀번호를 전달하여 바로 로그인 상태로 전환시키며 메인 화면으로 이동합니다.
동시에 로그인 성공 시 getUserProfile, getAllProducts, getAllOptions함수를 모두 수행하여 유저 정보, 모든 상품의 정보, 모든 상품의 옵션을 모두 가져옵니다.

-------------------------------------------------------------------------------------


2. 전체 상품 목록 확인 및 은행명 기준 검색 기능

다음으로 전체 상품 목록을 확인해보면, 이전의 getAllProducts를 통해 모든 상품 목록을 예적금 상품 api 주소에 요청하여 가져옵니다. 그리고 가져온 상품들을 ProductListView가 mount 되면서 바로 모든 데이터를 productList에 저장하여 productList를 순회하며 상품별로 그룹화하여 출력합니다.

그리고 은행명을 기준으로 검색하기 위해서 searchByBank 함수를 구현하였으며, 
productList를 빈 리스트로 재할당합니다.
입력창에 아무것도 입력되지 않을 시 모든 상품을 출력하게 설정하였으며, 입력창에 은행명을 입력시 includes 메서드를 활용하여 해당 문자열을 포함하면 productList에 추가합니다. 그 후 productList 내에 있는 상품들만 화면상에 출력됩니다.

그리고 각 상품에 마우스를 올릴 시 선명한 색을 입혀 사용자가 조회할 대상을 쉽게 인식할 수 있게 사용자 경험을 개선시켰습니다.

-------------------------------------------------------------------------------------

3. 상세정보 

그리고 조회하고자 하는 상품을 클릭 시 해당 상품의 상세 정보를 조회 가능하며, 관심 상품 상태의 버튼을 클릭 시 addCart() 함수가 수행되며 관심 상품의 id를 userObj에 저장합니다. 그리고 고객의 프로필 상에 관심을 가지는 상품들의 이름이 출력됩니다. 관심 상품 해제 상태의 버튼을 클릭 시 deleteCart() 함수가 수행되며 관심 상품의 id를 userObj에서 삭제합니다.

-------------------------------------------------------------------------------------

4. 프로필

4-1) 회원정보, 회원정보 수정

4-2) 추천 상품